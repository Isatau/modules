import random
from .. import loader, utils
from datetime import timedelta
from telethon import functions
from telethon.tl.types import Message

@loader.tds
class frogkormMod(loader.Module):
	strings = {
		'name': 'JabSle',
		'kon': '<i>‚úÖ–û—Ç–ª–æ–∂–µ–Ω–∫–∞ —Å–æ–∑–¥–∞–Ω–∞, –∫–æ—Ä–º–µ–∂ –≤ —Ö–∞–Ω–µ–π –∑–∞–ø—É—â–µ–Ω...</i>',
		'kon_already': '<i>–£–∂–µ –∑–∞–ø—É—â–µ–Ω–æ</i>',
		'koff': '<i>‚ùå–ê–≤—Ç–æ—Ñ–∞—Ä–º–∏–Ω–≥ –≤ —Ö–∞–Ω–µ–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.\nüêû–ù–∞–¥—é–ø–∞–Ω–æ –±—É–∫–∞—Ö:</i>',
	}
	
	def __init__(self):
		self.name = self.strings['name']
		
	async def client_ready(self, client, db):
		self.client = client
		self.db = db
		self.myid = (await client.get_me()).id
		self.honey = 798765050
		
	async def koncmd(self, message):
		running = True
		while running:
			status = self.db.get(self.name, "status", False)
			if status: return await message.edit(self.strings['kon_already'])
			self.db.set(self.name, "status", True)
			await self.client.send_message(self.honey, "–ü–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±—É", schedule=timedelta(seconds=20))
			await self.client.send_message(self.honey, "–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=timedelta(seconds=20))
			await self.client.send_message(self.honey, "–†–∞–±–æ—Ç–∞ –≥—Ä–∞–±–∏—Ç–µ–ª—å", schedule=timedelta(seconds=20))
			await message.edit(self.strings['kon'])
		
	async def koffcmd(self, message):
		self.db.set(self.name, 'status', False)
		await message.edit(self.strings['koff'])
